# This is a basic workflow to help you get started with Actions

name: Regular release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install MSVC tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: eranif/codelite
          path: src
      
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      
      - name: Install scons
        run: python3 -m pip install scons
      
      - name: Checkout the checkout
        run: |
          cmd /r %GITHUB_WORKSPACE% /s /b
          echo ---
          dir %GITHUB_WORKSPACE%\src
          echo ---
          dir %GITHUB_WORKSPACE%\src\sdk\wxconfig
      
      - name: Build the executable
        run: scons -C %GITHUB_WORKSPACE%\src\sdk\wxconfig RELEASE=1

      - name: Checkout after
        run: dir %GITHUB_WORKSPACE%\src\sdk\wxconfig

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: "src\\*"
          commit_message: Updating to latest version
          skip_dirty_check: false
      
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
      - name: Create Github release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.date.outputs.date }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
    
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: wx-config.exe
          asset_name: wx-config.exe
          asset_content_type: application/exe
